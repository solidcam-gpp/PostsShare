;is_last_job_using_drive_unit ne ponyatno
; machine_plane laja hahaha


@init_post
;----------otobrajzenie	
    global string T_f xonext_f
    global logical 
    global integer  
    global numeric 

        
		T_f     = 'z2.0(p)'
		xonext_f='5.3(*2)'
		xopos_f='5.3(*2)'

;-----------$0	
    global integer int_cutoff_tool int_Cut_Off_Speed int_Cut_Off_Feed 
    global logical log_T8_Holders log_T9_Holders
;------------tooling
    global integer T tool_position_in_turret_old label_counter
    global logical log_tool_change log_job_start log_rotate_to_plane log_B1_on<<2>> log_end_of_job
		global string  R  
;-------------spin 
		global string str_S_stop	
		global logical program_start 
		global integer int_old_spin
;-------------sync_petern
		global logical log_global_sync_petern log_G650 log_G620
		global string Axes_Pattern
		global integer old_sync_label
;-----------------exst mem
		global integer int_memory_caunter
;------------------MCO---------------
		global integer int_MCO_prev_submachine_ID
		global logical log_MCO_prev_submachine_ID

	blknum_gen				= false
	blknum_delta			= 1
	blknum_max				= 999999
	gcode_space				= true
	
	;----------------------------Trace------------------------	
	global logical LogInTrace 
	global integer IntTrace
	if LogInTrace eq false
		LogInTrace = true
		input "Trace level : 0-None ; 1-Mid ; 5-All", IntTrace;	
	endif
	trace "all": IntTrace
	
endp


@start_of_file;------------inicializaciya glob var
	program_start=1
	int_memory_caunter=0
;	Print 'Proverit stroku G951; G28 W0; G901 B-90. na sub sp zavershenie raboty s b osju' 
	
endp


@m_feed_spin;----------------------upravlenie-----------------------	
;funkciya vypolnnyaet osnovnoe upravlenie v nachale programmy po sredctvam sbora global'noj informacii iz perexodlyh funkcij
;vyxodyawih iz traisa ranshe ee i vyzova neobhodimyh udr funkcij takzhe propisana smena ofseta instrumenta i informaciya o jobe

;primer outputa
;udr_s_stop
;M82 T0
;M1

;udr_sync_process
;G630

;udr_TOOLING
;T0300

;(Tool:03 Offset:03 job name:TR-contour7 type:turn)

;udr_machine_plane udr_spin 
;G18 G99 T03 M3 S1=4000 M88


;/esli vybran G620

;udr_start_of_job
;/esli vybran M18 C0.
;/esli vybran G900 X9. Z2.1 B90.
;/esli vybran G950 X0 Z0
;/esli vybran G17
;G0 X10.5 Y0. Z-0.295


;vuzyvaemye udr
;1 udr_s_stop = pechataet ostanovku vraweniya shpindelejia (end_of_job)
;2 udr_sync_process = pechat' paternov krome g650
;3 udr_TOOLING = pechat' nomera instrumenta T0300
;4 ====== udr_G650===
;5 udr_machine_plane = vybiraet plan raboty (G18..) i feed unit (G99) ioffset instrumenta
;6 udr_spin = vjbiraet dvigatel vraweniya (S1,S2...) i pechataet kod vkljucheniya
;7 print G620 posle vyhada na instrument dlya cimul'tannoj raboty 
;8 udr_start_of_job = print pervoj stroki s vozmozhnymi opciyami
; uspol'zuemye globalnye peremennye: log_G650 log_tool_change log_job_start log_G620 log_rotate_to_plane



;=====================Tool Change	
if log_tool_change eq 1 or log_global_sync_petern eq 1 or log_rotate_to_plane eq 1 and (submachine_ID eq 2 or submachine_ID eq 7)  	

;---------------------end_of_job
	if program_start ne 1
		call@udr_end_of_job
	endif


		if submachine_ID ne 2
			log_B1_on<<1>>=0
		endif

		if submachine_ID ne 7
			log_B1_on<<2>>=0
		endif	


	log_G620=0
		
	
;--------------------------Sync Process		
	if log_global_sync_petern eq 1
		call@udr_sync_process
	endif
;------------------Tool Print	
	if log_B1_on<<2>> eq 0 and submachine_ID eq 7
		{nl nl 'G910 B0'}			
	endif

	call@udr_TOOLING	

;-------------------G650			
	if log_G650 eq 1
		call@udr_G650
	endif

endif

;============================ job_start======================================
if log_job_start eq 1 

if log_tool_change ne 1 and log_rotate_to_plane ne 1
	{nl}
endif

;----------------mesage start
		{nl'(Tool:'T}

;--------------------offset change
	if tool_offset_number	ne T and job_machine_type eq turning
		T=tool_offset_number
	elseif h_offset ne T and job_machine_type eq milling
		T=h_offset
	endif
;----------------mesage end
 {' Offset:'T ' job name:'  job_name ' type:' job_type')'}

;--------------------------machine_plane
	{nl}
	call@udr_machine_plane	

;----------spin----------
	if log_G650 ne 1 
		if int_old_spin ne spin or log_tool_change eq 1
			call@udr_spin
			{' M88'}
		endif	
	endif

;----------------------G620 print	
	if log_G620 eq 1
		gcode = 0
		if ChannelName eq '$1'
			if job_machine_type eq 1 
				{nl}
				{'G'gcode ' X'(xonext*2) ' Y'yonext ' Z'zonext}

			else
				{nl,'M18 C'anext}
				{nl}
				{'G'gcode' X'xonext ' Y'yonext ' Z'zonext}	
			endif

		endif
		
		local string G620
			G620='G620'
			if ChannelName eq '$2'
				G620='G620 Z-'+tostr(ztool)
			endif
			{nl,G620}
	endif
;-------------------vkljushaet log B dlya main sp
	if submachine_ID eq 2
		log_B1_on<<1>>=1
	endif
;-------------------vkljushaet log B dlya sub sp
if submachine_ID eq 7
	log_B1_on<<2>>=1
endif
;---------------------------call job_start
	call@udr_start_of_job
endif

;==========================EXTERNAL_MEMORY
	
if EXTERNAL_MEM eq 1  or (EXTERNAL_MEM_TURN eq 1 and job_machine_type eq turning)
	if submachine_ID eq 5
		call@udr_ErrorMessage((2))
	endif
	local string i
	i=tostr(tool_position_in_turret:INTEGER_DEF_F)+'0'+tostr(int_memory_caunter:INTEGER_DEF_F)
	int_memory_caunter=int_memory_caunter+1
	{nl 'M98P'i',D2'}
	call@udr_open_file(i)
	if submachine_ID lt 5
		{nl '$1'}
	else
		{nl '$1'}
		{nl 'M99'}
		{nl '$2'}
	endif
endif


log_global_sync_petern=0	
log_job_start =0
log_G650=0
log_tool_change=0
program_start=0	
log_rotate_to_plane=0
gcode=-666.666	
endp


@setup 
; Back work extend length eq machine_offset_z if machine_offset_z ne 0 
	if BACK_WORK_E_L eq 0
		if submachine_ID eq 8 and ChannelName eq '$2'
			BACK_WORK_E_L=machine_offset_z
		endif
	endif
endp


@end_of_job
	
log_end_of_job = 1
int_MCO_prev_submachine_ID=submachine_ID


	if EXTERNAL_MEM eq 1 or EXTERNAL_MEM_TURN eq 1
		if submachine_ID lt 5
			{nl 'M99'}
			{nl '$2'}
			{nl 'M99'}
		else
			{nl 'M99'}
		endif
		call@udr_open_file(ChannelName)
	endif
	
;G620 !L laibel dlya otkljucheniya shpindelej
	if (log_G620 eq 1 and superimposition_axes eq 'Z1') or (log_G620 eq 1 and superimposition_axes eq 'Z1, C1')
		{nl '!L'+tostr(sync_label:integer_def_f)}
	endif
endp

@end_program
endp

@end_of_file
local string p
p=tostr(program_number:INTEGER_DEF_F)
call@udr_open_file(p)		
;----------------------MAIN------------------
		{nl,'$1'}
		{nl, 'IF[#599EQ1]GOTO998'}
		{nl,'M52 M6'}
		{nl, 'G4 X0.5'}
		{nl,'G18 G97 G40 G113' }
		{nl,'M89 M94 M96 M124' }
		{nl,'G0 G99 X#502 W-1.0'}
		{nl,'M51(PART OFF PROBE)'}
		{nl,'M1'}
		
{nl,'!!copy file=$1.PRG!!'}		
		
{nl,'!!delete file=$1.PRG!!'}

call@udr_open_file(p)	
		{nl,'G600'}
		{nl,'M8(BAR FEEDER START)'}
		{nl,'/M98P666666'}
		{nl,'M9(BAR FEEDER END)'}
		{nl,'(RETURN TO ST.POS)'}
		{nl,'M5 M25'}
		{nl,'M7(MAIN OPEN)'}
		{nl,'G4 U0.8'}
		{nl,'G0 G53 G98 Z[#26152+#[25060+#816]-#818] T0'}
		{nl,'G50 Z0'}
		{nl,'G999'}
		{nl,'G630'}
		{nl,'N999'}
		{nl, 'M2'}
		{nl, 'M99'}
		{nl,nl}

;----------------------sub------------------
call@udr_open_file(p)		
		{nl '',nl '$2'}
		{nl,'(----------------SUB------------)'}
		{nl,'M88'}
		{nl,'M1'}	
{nl,'!!copy file=$2.PRG!!'}
{nl,'!!delete file=$2.PRG!!'}
call@udr_open_file(p)
		{nl,'G600'}
		{nl,'G999'}
		{nl,'G630'}
		{nl, 'N999'}
		{nl, 'M2'}
		{nl, 'M99'}
		{nl,nl}	

;-----------------($0) Required fields for machining data 	
local numeric i
i=1000
{nl,nl,'$0'}
{nl, 'A2-LE-2-20-12-C-M'}

;--------------Bar Stock O.D.------
{nl, '#814='((stock_x_plus*2)*i):'z10.0(p)'};*1000

;----------Tool Positioning Point (DIA)------------
if TOOL_POS_POINT eq 0
	TOOL_POS_POINT=1.
endif
{nl, '#815='(TOOL_POS_POINT*i):'z10.0(p)'}

;---------Cut-Off Tool-------------
if int_cutoff_tool eq 0
	int_cutoff_tool=1
endif
{nl, '#816='(int_cutoff_tool*i):'z10.0(p)'}

;----------Cut-Off Speed------------
if int_Cut_Off_Speed eq 0
	int_Cut_Off_Speed=3000
endif
{nl, '#817='(int_Cut_Off_Speed*i):'z10.0(p)'}

;----------Cut-Off Feed (in mm per revolution)------------
if int_Cut_Off_Feed eq 0
	int_Cut_Off_Feed=0.03
endif
{nl, '#822='(int_Cut_Off_Feed*i):'z10.0(p)'}

;---------Cut-Off End (DIA)-----------
{nl, '#824=-000001000'}

;-------- Machining Length, Start point shift amount------------
if MCN_LEN eq 0
	MCN_LEN=stock_z_plus
endif
{nl, '#818='(MCN_LEN*i):'z10.0(p)'}

;--------------Pieces/1Chuck------
{nl, '#819=0000001000'}

;---------------Back chuck extend length-----
{nl,'#918='(BACK_CHUCK_E_L*i):'z10.0(p)'}

;------------------Back work extend length----
if BACK_WORK_E_L eq 0
	MCN_LEN=stock_z_plus
endif

{nl, '#821='(BACK_WORK_E_L*i):'z10.0(p)'}

;--------------------
{nl, '#921=0000000000'}

;------------GuideBush Specify--------
if GBL eq 1
	{nl, '#919=0000001000'}
else
	{nl, '#919=0000000000'}
endif
;--------------tool pos------
{nb,'#922=0000000000'}
{nb,'#990=0004007000'}
{nb,'#991=0000055000'}
{nb,'#992=0000067000'}
{nb,'#893=0000000000'}
{nb,'#25974=0004050000'}

;------ log_T8_Holders -------------
if log_T9_Holders eq true
	{nb,'#25975=0004061000'}
else
	{nb,'#25975=0004058000'}
endif

;------log_T9_Holders-----------------
if log_T9_Holders eq true
	{nb,'#25976=0004061000'}
else
	{nb,'#25976=0004058000'}
endif

{nb,'#25977=0000000000'}
{nb,'#25977=0000000000'}
{nb,'#25979=0000000000'}
{nb,'#25980=0000000000'nl''}
{nl, '%'}	

endp


@A;--------------------UDR FUNKCII------------
endp

@udr_open_file(string name)
	{nl,'!!open file='name'.PRG!!'}
endp


@udr_sync_process
	
	local string Pattern

	if old_sync_label ne sync_label 
		Pattern=Axes_Pattern
	endif	
	if submachine_ID eq 4 and Axes_Pattern ne 'G620'
		call@udr_ErrorMessage((1))
	endif
	
	if submachine_ID eq 3 and Axes_Pattern ne 'G610'
		call@udr_ErrorMessage((1))
	endif

	if Axes_Pattern eq '!L'
		Pattern=Axes_Pattern+tostr(sync_label:integer_def_f)
	endif
	
	if Axes_Pattern ne 'G650' and Axes_Pattern ne 'G620' 
			call@udr_open_file(('$1'))
			   	if (Axes_Pattern eq 'G600' or Axes_Pattern eq 'G610')				
						{nl 'G630'}
					endif
					{nl,nl,Pattern}
	
			call@udr_open_file(('$2'))
					if (Axes_Pattern eq 'G600' or Axes_Pattern eq 'G610')
						{nl 'G630'nl nl 'T3000'}
					endif	
					{nl,nl,Pattern}

			call@udr_open_file(ChannelName)
	endif
	
	if Axes_Pattern eq 'G650'
		log_G650=1
	endif
	

	if Axes_Pattern eq 'G620'
			if superimposition_axes eq 'Z1'  or superimposition_axes eq 'Z1, C1'
;				if last_tool eq 1
;					call@udr_Allert_Message((1)) 
;				endif
				call@udr_open_file(ChannelName)			
				{nl nl 'G630'}
			else
				call@udr_open_file(('$1'))
				{nl nl 'G630'}
				{nl 'G620'}
				call@udr_open_file(('$2'))	
				{nl nl 'G630'}	
			endif
			log_G620=1
	endif	
old_sync_label=sync_label
endp


@udr_G650
	;intercepts a part in worktime between two spindles or cutoff 

	local integer L i
	local string L_sub<<3>>	S 

	L=sync_label*10
	S=tostr(spin:integer_def_f)
	
;------------------------sub--------------------
	;---------------------counter i initialisation 
	i=0 
	;---------------------	
call@udr_open_file(('$2'))
	{nl,nl,'G630'}
	{nl,'T3000 (Pick-off-part)'}
	{nl,'G18 G98 M88 M16'}
	{nl,'G650'}
	{nl,'G0 Z-1. M16'}
	if SPINDLE_STOP_PART_OFF eq 0 and job_machine_type ne milling
		{nl,'M77 (WAIT SP SYNCH)'}
	else
		{nl,'!L' L:'z2.0(p)'}
		i=i+1
		L_sub<<i>>=tostr(L:integer_def_f)
		L=L+1
	endif
	{nl,'G1 Z['zonext'-#821] F3000'}
	{nl,'G4 X0.3'}
	{nl,'M15 (SUB CLOSE)'}

	{nl,'!L' L:'z2.0(p)'}
	i=i+1
	L_sub<<i>>=tostr(L:integer_def_f)
	L=L+1	

;------------------------main-------------------
	;---------------------counter i initialisation 
	i=1
	;---------------------
call@udr_open_file(('$1'))
	{nl,nl,'G630'}
	{nl,'T',T,R}

	{nl}

	call@udr_machine_plane	

	if SPINDLE_STOP_PART_OFF eq 1 or job_machine_type eq milling
		{' M3 S1=100 M24 S2=100'}
	else
	 if	spin_direction eq 0
			{' M3 S1='S,' M24 S2='S}
		else
			{' M4 S1='S,' M23 S2='S}
		endif
	endif
	{' M88'}

	{nl,'G0 X'(xonext*2)' Y'yonext' Z'(zonext-tool_G)}
	{nl,'G650'}
	{nl,'G114.1 H1 D-2 R90.(Spindle synchronization control)'}
	if SPINDLE_STOP_PART_OFF eq 1 or job_machine_type eq milling
		{nl,'M77'}
		{nl,'G4 X.5'}
		{nl,'M3 S1=0'}
		{nl,'M18 C'anext}
		{nl,'!L'L_sub<<i>>}
		i=i+1
	endif
	{nl,'!L'L_sub<<i>>}
	i=i+1
	if SPINDLE_STOP_PART_OFF eq 1 or job_machine_type eq milling
		{nl}
		call@udr_spin
	endif	
endp


@udr_TOOLING
;snosit parametr trasa tool_position_in_turret v peremennuju T, opredelyaet Holders

T=tool_position_in_turret
R='00'
tool_position_in_turret_old=tool_position_in_turret
if tool_position_in_turret gt 79 and tool_position_in_turret lt 86
	if tool_position_in_turret eq 80
		T=8
	endif
	
	if tool_position_in_turret eq 81
		T=8
		R='00 R1'
	endif
	
	if tool_position_in_turret eq 82
		T=8
		R='00 R2'
	endif
	
	if tool_position_in_turret eq 83
		T=58
	endif
	
	if tool_position_in_turret eq 84
		T=58
		R='00 R1'
	endif
	
	if tool_position_in_turret eq 85
		T=58
		R='00 R2'
	endif
log_T8_Holders=1	
endif

if tool_position_in_turret gt 89 and tool_position_in_turret lt 96
	if tool_position_in_turret eq 90
		T=9
	endif
	
	if tool_position_in_turret eq 91
		T=9
		R='00 R1'
	endif
	
	if tool_position_in_turret eq 92
		T=9
		R='00 R2'
	endif
	
	if tool_position_in_turret eq 93
		T=59
	endif
	
	if tool_position_in_turret eq 94
		T=59
		R='00 R1'
	endif
	
	if tool_position_in_turret eq 95
		T=59
		R='00 R2'
	endif
log_T9_Holders=1
endif

;----------------------print tool-------------------

if log_G650 ne 1
	{nl nl 'T',T,R}
	if tool_message ne ''
		{' ('tool_message')'}
	endif
endif
endp

@udr_s_stop
		{nl,str_S_stop ' T0',nl,'M1'nl}
		int_old_spin=-666
endp

@udr_spin
;----------------------t_grup for spin-------------
local integer i w t_grup
local string q <<7>> y
;opredelenie t_grup v stringe po poziciyam  
q<<1>>='1 2 3 4 5 24 25 26'
q<<2>>='7 8 9 11 12 13 14 51 52 53 54'
q<<3>>='80 81 82 90 91 92'
q<<4>>='83 84 85 93 94 95'
q<<5>>='21 22 23'
q<<6>>='31 32 33 34' 
q<<7>>='35 36 37 38'
y=tostr(tool_position_in_turret:INTEGER_DEF_F)
;------------vhule------------
i=1
w=0
while i le asize(q) 
	w=instr(q<<i>> , y)
	if w ne 0 
		break 
	endif
	i=i+1
endw
t_grup=i

;------------------spin-----------
local string cw <<5>> M5<<5>> y

int_old_spin=spin
y=tostr(spin:integer_def_f)

if spin_direction eq 0 ;cw
	cw <<1>> ='M3 S1='+ y
	cw <<2>> ='M23 S2='+ y
	cw <<3>> ='M80 S3='+ y
	cw <<4>> ='M83 S4='+ y
	cw <<5>> ='M180 S5='+ y
else
	cw <<1>> ='M4 S1='+ y
	cw <<2>> ='M24 S2='+ y
	cw <<3>> ='M81 S3='+ y
	cw <<4>> ='M84 S4='+ y
	cw <<5>> ='M181 S5='+ y	
endif

M5 <<1>> ='M5'
M5 <<2>> = 'M25'
M5 <<3>> ='M82'	
M5 <<4>> ='M85'
M5 <<5>>='M182'

;---------printing SPIN
if t_grup eq 1 and tool_position ne 2
	{cw<<1>>}
	i=1
endif

if t_grup eq 2
	{cw<<3>>}
	i=3
endif

if job_machine_type eq turning
	if t_grup eq 3
		{cw<<1>>}
		i=1
	endif
	
	if t_grup eq 4
		{cw<<2>>}
		i=2
	endif	
else
	if t_grup eq 3 or t_grup eq 4
		{cw<<3>>}
		i=3
	endif
endif

if t_grup eq 5
	{cw<<4>>}
	i=4
endif	

if t_grup eq 6
	{cw<<5>>}
	i=5
endif

if t_grup eq 7
	{cw<<2>>}
	i=2
endif

str_S_stop = M5 <<i>>

endp

@udr_coordinate_print(numeric Print_index)
;pechataet koordinaty po indeksam
;==================Print_index
;1=turning next
;2=milling next
;3=milling next for G900 angle
;4=milling next for G900 5x
;5=milling next for cross tools

if Print_index eq 1
	{'G'gcode ' X'xonext ' Y'yonext ' Z'zonext}	
endif	

;2=milling next
if Print_index eq 2
	{'G'gcode' X'xonext ' Y'yonext ' Z'zonext}	
endif

;3=milling next for G900 angled
if Print_index eq 3
		if submachine_ID eq 7
	 		if bnext ne 0 
	 			bnext=(bnext*-1)
	 		endif
		endif
	{'G900 X'xonext ' Z'zonext ' B'bnext}
endif

if Print_index eq 3.1
	{'G'gcode' X'xonext ' Y'yonext ' Z'zonext}	
endif

;4=milling next for G900 5x
if Print_index eq 4
	{'G900 X'xonext ' Z'zonext ' B0'}	
endif


if Print_index eq 4.1
	{'G'gcode ' X'xonext ' Z'zonext ' C'anext  ' B'bnext}	
	{nl' Y'yonext}
endif  
   
;5=milling next for cross tools
if Print_index eq 5
	{'G'gcode' X'yonext:'5.3(*2)' ' Y'xonext ' Z'zonext }	
endif

endp


@udr_start_of_job
;start raboty funkcija vivoda pervyh coordinat v jobe  

;------------change milling mode for main or sub sp
	local string m
	m='M18 C'
	if	submachine_ID gt 5
		m='M48 C'
	endif

	gcode = 0
;===============================================================
;========================G620 turning milling ==============================
;===============================================================	
	if log_G620 eq 1   
			{nl}
			if ChannelName eq '$2'
				{'G'gcode ' X'xonext ' Y'yonext ' Z'zonext ',F3000'}
			endif
			if (log_G620 eq 1 and superimposition_axes eq 'Z1') or (log_G620 eq 1 and superimposition_axes eq 'Z1, C1')
				{nl '!L'(sync_label*100)}
			endif
	endif

	
;===============================================================
;===================================milling=====================
;===============================================================
	if (job_machine_type eq 0 and log_G620 eq 1 and ChannelName ne '$1') or (job_machine_type eq 0 and log_G620 eq 0)

;----------------------B tool position on T1-5 5 axsis turning work option
		if tool_position eq 2
			if first_tool ne 1
					{nl 'M5'}
					{nl m anext nl}
 					call@udr_coordinate_print((2))
			else		
				{nl,m anext}
				{nl}	
				call@udr_coordinate_print((2))
			endif
		endif


;--------------------------- A tool position
		if tool_position eq 1 
				if log_G620 ne 1
					{nl,m anext}
				endif
				{nl}

;-------------B1 on for all type of jobs				
				if submachine_ID eq 2 or submachine_ID eq 7
					if log_rotate_to_plane eq 1 or log_tool_change eq 1 or log_global_sync_petern eq 1	
						if X5_job eq 0 		
							call@udr_coordinate_print((3))
						else 
							call@udr_coordinate_print((4))	
						endif
						{nl'G950 X0 Z0'}
						{nl 'G17'nl}
						if X5_job eq 0 
							call@udr_coordinate_print((3.1))
						else 
							call@udr_coordinate_print((4.1))	
						endif							
					endif
				endif	
;----------------vyzyvaet pervyj hod dlya cross blokov na 20ih 30ih pozicijah
				if mounting_direction_x eq 1. and (submachine_ID eq 3 or submachine_ID eq 8)
					call@udr_coordinate_print((5))
;----------------	ostol'nue variatu instrymentov
				elseif (submachine_ID ne 2 and submachine_ID ne 7)
					call@udr_coordinate_print((2))
				endif 
		endif
	endif	
endp


@udr_ErrorMessage(integer iNumber)

	local string mes<<2>>
	mes<<1>>=	original_job_name+' Axes pattern not suitable for this type of work'
	mes<<2>>= original_job_name+ ' Cannot use external files in G650'	
	Print mes<<iNumber>>
	{nl,'!!delete file=$1.PRG!!'} 
	{nl,'!!delete file=$2.PRG!!'}     
  Abort
endp

@udr_Allert_Message(integer i)

	local string mes<<2>> 
	mes<<1>>=original_job_name+ ' There may be errors in the arrangement of patterns '
	mes<<2>>= original_job_name	
	Print mes<<i>>
	
endp

@udr_machine_plane
;funkciya v pervom outpute vybiraet mashine plane vobhod baga po gruppam instrumentov opisannyh v tablice
;vo vtorom outpute feed unit

;---------------opisaniya peremennyh
;q =tablica
;i w =schetchiki
;y =tool_position_in_turret
;G99_98 =G99 or G98

	local integer i w t_grup
	local string q <<4>> y G98_99

;==================================================
	if job_machine_type eq turning or tool_position eq 2
		gcode = 18

;=========================miling	
	elseif job_machine_type eq milling and tool_position ne 2	

;------------------opredelenie v tablice po poziciyam  
	
		q<<1>>='1 2 3 4 5 7 8 9' ;g19
		q<<2>>='80 81 82 90 91 92 83 84 85 93 94 95' ;g17
		q<<3>>='11 12 13 14 51 52 53 54' ;G18 for G900 on B1
		q<<4>>='21 22 23 24 25 26 31 32 33 34 35 36 37 38' ;g17 if mounting_direction_x 1 g19
		
;--------------Y=tool_position_in_turret
		y=tostr(tool_position_in_turret:INTEGER_DEF_F)

;------------vhule------------
		i=1
		w=0
		while i le asize(q) 
			w=instr(q<<i>> , y)
			if w ne 0 
				break 
			endif
			i=i+1
		endw

		t_grup=i

		
		if t_grup eq 1
			gcode = 19
		endif
		
		if t_grup eq 2
			gcode = 17
		endif		

		if t_grup eq 3
			gcode = 17
			if log_rotate_to_plane eq 1
				gcode = 18
			endif
		endif	

		if t_grup eq 4 
			gcode = 17
			if mounting_direction_x ne 0
				gcode = 19
			endif
		endif			
endif
;=======================feed unit

	if feed_unit eq mm_rev
		G98_99='G99'
	else
		G98_99='G98'	
	endif

;===========================printing
{'G'gcode ' ' G98_99 ' T',T' '}
endp


@udr_end_of_job
	{nl nl '-------------------udr_end_of_job------------------------------'}

	
if log_end_of_job eq 1	
	local logical B1_ID
	B1_ID=0

	if submachine_ID eq 2 or submachine_ID eq 7 or log_MCO_prev_submachine_ID ne 0  
		B1_ID=1		
	endif
	
		;--------ostanovka raboty B1 i shpindelej pri perexode mezhdu submachinami i instrumentami
			if log_G620 eq 1 or (log_tool_change eq 1 and B1_ID eq 0)
				if log_B1_on<<1>> eq 1
					{nl,'G951'}
					{nl,'G901 B90.'}
				endif
				if log_B1_on<<2>> eq 1
					{nl,'G951'}
					{nl,'G901 B-90.'}
				endif	
				call@udr_s_stop
			endif
		
			;---------------------sluchai perehodov megdu jobami bez cmeny paterma so smenoj instrumenta
			if log_G620 eq 0 and  log_tool_change eq 0 and B1_ID eq 0			
				call@udr_s_stop		
			endif 
		
;----------------------ostanovka raboty B1 main sp mezjdy jobami na odnoj submashine
;**************esli bula  smena ugla		
			if B1_ID eq 1 and (log_B1_on<<1>> eq 1 or log_B1_on<<2>> eq 1) and tool_position_in_turret_old eq tool_position_in_turret and log_global_sync_petern ne 1
				{nl,'G951'}
				{nl,'G901 B0'}
			endif
;****************************

;**************esli bula smena instrumenta
			if B1_ID eq 1 and (log_B1_on<<1>> eq 1 or log_B1_on<<2>> eq 1) and tool_position_in_turret_old ne tool_position_in_turret
				{nl,'G951'}
				{nl,'G901 B0'}
				call@udr_s_stop
				
			endif		
;*******************************
		
;**************esli bula smena paterna
			if B1_ID eq 1 and (log_B1_on<<1>> eq 1 or log_B1_on<<2>> eq 1) and tool_position_in_turret_old eq tool_position_in_turret and log_global_sync_petern ne 0
				{nl,'G951'}
				{nl,'G901 B0'}
				
			endif
;*******************************
		

		
;*************************pered vhodom v raboty na B1	
			if log_rotate_to_plane eq 1 and B1_ID eq 1 and log_B1_on<<1>> eq 0 and log_B1_on<<2>> eq 0
				call@udr_s_stop
			endif

endif		

gcode=-666.666
log_end_of_job=0
endp



@B ;-----------------Perehodnye---------------------------
endp
@turn_change_tool
if tool_position eq 2 and first_tool ne 1
else
		log_tool_change=1
endif
endp

@sync_process
if number_jobs_in_label  ne 0	
	Axes_Pattern = get_axes_pattern_name(Sync_Data_Name,ChannelID,sync_label)	
	log_global_sync_petern=1
endif	
endp

@change_tool
	call@turn_change_tool
endp

@feed_spin 
	call@m_feed_spin
endp	

@start_of_job
	log_job_start=1
endp

@rotate_to_plane
	log_rotate_to_plane=1
endp

@C;-----------------------koordinaty------------------
endp

@rapid_move
	gcode=0
	if submachine_ID eq 3 and job_type eq 'groove'
		zopos=zopos-tool_G
	endif
	
;	{nl ['G'gcode][' X' xopos][' Y' yopos][' Z'zopos]}
endp

@move_5x

endp

@line

	if submachine_ID eq 5 and job_type eq 'groove'
		zopos=zopos-tool_G
	endif
	
	if groove_type_cut_off eq 1 and xopos < .05
		xopos=-0.5
	endif


	gcode=1
	if change (gcode)
;		{nb 'G'gcode}
		skipline = 0
	endif
	if change (xopos) or change (yopos) or change (zopos)
;		{nb}
	endif
	
;{[' X' xopos]  [' Y' yopos] [' Z'zopos] [' F'feed]}

endp

@arc
	gcode = 2 + arc_odirection
	
;  {nl,['G'gcode] [' X'xopos] [' Y'yopos] [' Z'zopos]}

	if arc_size gt 180 then
		radius = -radius
	endif
;	{' R'radius,[' F'feed]}
endp



@compensation

;	gcode = 41 + side
;	{nl 'g' gcode }

;	skipline = false

endp

@drill
;	{nl,'Drill'}
endp

@D;-------------------------MCO-------------------
endp

@start_mach_ctrl

if left(machine_control_name,1)eq '@' or machine_control_name eq 'PART EJECT'
	call@udr_open_file(ChannelName)
	
	if int_MCO_prev_submachine_ID eq 7 or int_MCO_prev_submachine_ID eq 2
		log_MCO_prev_submachine_ID=1
	endif	

	if program_start ne 1
		tool_position_in_turret_old=-666
		log_tool_change=1
		call@udr_end_of_job
	endif

	log_MCO_prev_submachine_ID=0
endif

if machine_control_name eq'PART EJECT'
	tool_position_in_turret_old=-666
	log_tool_change=1
	call@udr_end_of_job
	{nl,nl,'N333 (EJECT)'}
	{nl,'G98 M88 M25 M31 M79'}
	{nl,'M33'}
	{nl,'G53 Z33. M72'}
	{nl,'M16'}
	{nl,'M10'}
	{nl,'G4 X0.5'}
	{nl,'G28 W0 M73 M11'nl 'T3000' nl nl}
endif
endp

@open_close_obj
if left(machine_control_name,1)eq '@'	
	local integer m

	if MCO_New_Line eq 1
		{nl}
	endif
	
	if DeviceName eq 'MAIN'
		m=8
		{' M' (m-open_close)}
	elseif DeviceName eq 'SUB'
		m=17
		{' M' (m-open_close)}	
	endif
endif		
endp

@spin
if left(machine_control_name,1)eq '@'
	local integer m ;Mcode dryve unit name
	local string s ;dryve unit id

	if DeviceName eq 'MAIN'
		m=2
		s=' S1='
	elseif DeviceName eq 'SUB'
		m=22
		s=' S2='
	elseif DeviceName eq 'X1' or DeviceName eq 'B1'
		m=79
		s='S3='		
	elseif DeviceName eq 'T20XX'
	 	m=84
		s=' S4='	 	
	elseif DeviceName eq 'T31XX'
		m=179 
		s=' S5='			
	endif	

	m=m+spin_direction

	if MCO_New_Line eq 1
		{nl}
	endif

	{'M'm}
	
	if spin_direction ne 3
		{s spin_rate:'5.3(p)'}
	endif
endif
endp 
 
@axes_sync 
if left(machine_control_name,1) eq '@'
;---------------Z1 or C1 SYNC ON
	if DeviceName eq 'MAIN' and axes_sync_status eq 1
		
			if axis_sync_master eq 'Z1'
				call@udr_open_file(('$1'))
				{nl 'G650'}
				call@udr_open_file(('$2'))
				{nl 'G650'}
			else
				call@udr_open_file(('$1'))
				{nl '!L1190'}
				{nl 'M190'}
				call@udr_open_file(('$2'))
				{nl '!L1190'}
			endif	
	endif 
;---------------Z1 or C1 SYNC Off
	if DeviceName eq 'MAIN' and axes_sync_status eq 2
		if axis_sync_master eq 'C1'
			call@udr_open_file(('$1'))
			{nl '!L1191'}
			{nl 'M191'}
			call@udr_open_file(('$2'))
			{nl '!L1191'}
		endif			
	endif
 	call@udr_open_file(ChannelName)
endif 
endp
 	
@move_object
if left(machine_control_name,1) eq '@' and ActionName eq 'Submachine' 	
	
	if log_tool_change eq 1
		call@udr_TOOLING
		log_tool_change = 0	
	endif
	
	local string name G0 F
	local string move_axis
	gcode = 0
	{nl}

	if change(gcode)
		{['G'gcode]}
	endif


	name = left(name_axis_x,1)
	move_axis = name
	{[move_axis xh_move]}

	name = left(name_axis_y,1)
	move_axis = name
	{[move_axis yh_move]}
	
	name = left(name_axis_z,1)
	move_axis = name
	{[move_axis zh_move]}
	
	name = left(name_axis_a,1)
	move_axis= name
 	{[move_axis ah_move]}
	
	{[',F'feed_move:'5.3(p)']}
endif	
endp

@working_mode
if left(machine_control_name,1) eq '@'

	if MCO_New_Line eq 1
		{nl}
	else
		{' '}
	endif

	if MCO_Working_Mode eq 1
		if DeviceName eq 'MAIN'
			{'M18 C0'}
		endif
		if DeviceName eq 'SUB'
			{'M48 C0'}
		endif
	endif
	
endif	
endp

@end_mach_ctrl
;	{nl sync_spindle}
;	{nl MCO_Working_Mode}
endp

@spindles_sync
if left(machine_control_name,1) eq '@'	
	
	if sync_spindle eq 2
		{nl 'G113(Spindle synchronization control cancel)'}
	else
		call@spindle_orient
	endif
	 
endif
endp

@spindle_orient
if left(machine_control_name,1) eq '@'
	if MCO_Working_Mode eq 1
		{nl 'M3 S1=100 M24 S2=100'}
		{nl 'G114.1 H1 D-2 R'ValSpindleOrientation:'5.3(p)' '(Spindle synchronization)'}
		{nl 'M77'}
		{nl 'M3 S1=0' nl'M18 C'ValSpindleOrientation:'5.3(p)'}
	else
		if spin_rate eq 0
			spin_rate=100
		endif
		{nl 'M3 S1='spin_rate:'5.3(p)' ' M24 S2='spin_rate:'5.3(p)'}
		{nl'G114.1 H1 D-2 R'ValSpindleOrientation:'5.3(r)' '(Spindle synchronization)'}
		{nl 'M77'}
	endif
	
endif
endp

@mco_message
	{nl message}
endp